{"version":3,"sources":["types/user.ts","store/action-creators/user.ts","types/search.ts","store/action-creators/search.ts","store/action-creators/index.ts","hooks/useActions.ts","hooks/useTypedSelector.ts","components/User.tsx","components/Home.tsx","App.tsx","store/reducers/userReducer.ts","store/reducers/searchReducer.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["UserActionTypes","SearchActionTypes","fetchData","name","dispatch","type","FETCH_USER","fetch","then","res","status","Error","statusText","result","json","data","FETCH_USER_SUCCESS","payload","catch","err","FETCH_USER_ERROR","cleanSearch","SEARCH_CLEAN","updateSearch","SEARCH_UPDATE","UserActionCreators","SearchActionCreators","useActions","useDispatch","bindActionCreators","ActionCreators","useTypedSelector","useSelector","User","state","user","error","loading","search","useEffect","className","to","onClick","src","avatar_url","alt","login","public_repos","followers","following","updated_at","Home","history","useHistory","placeholder","onChange","e","target","value","onKeyPress","event","code","toLowerCase","push","App","exact","path","initialState","rootReducer","combineReducers","action","toString","created_at","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.169a6602.chunk.js","sourcesContent":["export enum UserActionTypes {\n  FETCH_USER = \"FETCH_USER\",\n  FETCH_USER_SUCCESS = \"FETCH_USER_SUCCESS\",\n  FETCH_USER_ERROR = \"FETCH_USER_ERROR\",\n}\n\nexport interface IUserState {\n  data: null | {\n    avatar_url: string,\n    login: string,\n    followers: string,\n    following: string,\n    created_at: string,\n    updated_at: string,\n    public_repos: string\n  };\n  loading: boolean;\n  error: null | string;\n}\ninterface IFetchUserAction {\n  type: UserActionTypes.FETCH_USER;\n}\ninterface IFetchUserSuccessAction {\n  type: UserActionTypes.FETCH_USER_SUCCESS;\n  payload: any;\n}\ninterface IFetchUserErrorAction {\n  type: UserActionTypes.FETCH_USER_ERROR;\n  payload: string;\n}\n\nexport type IUserAction =\n  | IFetchUserAction\n  | IFetchUserSuccessAction\n  | IFetchUserErrorAction;\n\n\n","import { IUserAction, UserActionTypes } from \"../../types/user\";\nimport { Dispatch } from \"redux\";\n\nexport const fetchData = (name:string) => {\n  return (dispatch: Dispatch<IUserAction>) => {\n    dispatch({ type: UserActionTypes.FETCH_USER });\n    const response = fetch(`https://api.github.com/users/${name}`)\n      .then((res) => {\n        if (res.status >= 200 && res.status < 300) {\n          return res;\n        } else {\n          let error = new Error(res.statusText);\n          throw error;\n        }\n      })\n      .then((result) => result.json())\n      .then((data) => {\n        dispatch({\n          type: UserActionTypes.FETCH_USER_SUCCESS,\n          payload: data\n        });\n      })\n      .catch((err) =>\n        dispatch({\n          type: UserActionTypes.FETCH_USER_ERROR,\n          payload: \"Произошла ошибка при загрузке пользователя\",\n        })\n      );\n  };\n};\n","export enum SearchActionTypes {\n  SEARCH_CLEAN = \"SEARCH_CLEAN\",\n  SEARCH_UPDATE = \"SEARCH_UPDATE\",\n}\n\nexport interface ISearchState {\n  search: string;\n}\ninterface IClearSearchAction {\n  type: SearchActionTypes.SEARCH_CLEAN;\n}\ninterface IUpdateSearchAction {\n  type: SearchActionTypes.SEARCH_UPDATE;\n  payload: string;\n}\n\nexport type ISearchAction = IClearSearchAction | IUpdateSearchAction;\n","import { ISearchAction, SearchActionTypes } from \"../../types/search\";\n\nexport const cleanSearch = ()=>{\n    return {type: SearchActionTypes.SEARCH_CLEAN}\n}\n\nexport const updateSearch = (name=\"\")=>{\n    return {type: SearchActionTypes.SEARCH_UPDATE, payload: name}\n}","import * as UserActionCreators from \"./user\"\nimport * as SearchActionCreators from \"./search\"\n\nexport default{\n    ...UserActionCreators,\n    ...SearchActionCreators\n}","import {useDispatch} from \"react-redux\"\nimport {bindActionCreators} from \"redux\"\nimport ActionCreators from \"../store/action-creators\"\n\n\nexport const useActions =() => {\n    const dispatch = useDispatch()\n    return bindActionCreators(ActionCreators, dispatch)\n}","import {TypedUseSelectorHook, useSelector} from 'react-redux'\nimport { RootState } from '../store/reducers'\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector","import { Link } from \"react-router-dom\";\nimport React, { useEffect } from \"react\";\nimport { useActions } from \"../hooks/useActions\";\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\n\nconst User: React.FC = () => {\n  const { data, error, loading } = useTypedSelector((state) => state.user);\n  const { search } = useTypedSelector((state) => state.search);\n  const { fetchData, cleanSearch } = useActions();\n  \n  useEffect(() => {\n    fetchData(search);\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"content\">\n        <div className=\"loading\">Идет загрузка...</div>\n      </div>\n    );\n  }\n  if (error) {\n    return (\n      <div className=\"content\">\n        <div className=\"error\">Пользователь не найден</div>\n        <Link to=\"/lab10/build/\">\n          <button className=\"button\" onClick={cleanSearch}>Главная</button>\n        </Link>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"content\">\n      {data !== null ? (\n        <div className=\"usercard\">\n        <img\n          src={data!.avatar_url}\n          alt=\"Ошибка загрузки аватара\"\n          className=\"avatar\"\n        />\n        <h1 className=\"login\">{data!.login}</h1>\n        <h3>{data!.public_repos} repositories</h3>\n        <h3>{data!.followers} followers</h3>\n        <h3>{data!.following} following</h3>\n        <div>Created at {data!.updated_at}</div>\n      </div>\n      ) : (\n        <div />\n      )}\n      \n      <Link to=\"/lab10/build/\">\n        <button className=\"button\" onClick={cleanSearch}>Главная</button>\n      </Link>\n    </div>\n  );\n};\n\nexport default User;\n","import { useHistory } from \"react-router-dom\";\nimport { useActions } from \"../hooks/useActions\";\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\n\nconst Home: React.FC = () => {\n  const { search } = useTypedSelector((state) => state.search);\n  const { updateSearch } = useActions();\n  const history = useHistory();\n  return (\n    <div className=\"content\">\n      <div className=\"search-form\">\n        <h2>Поиск пользователя</h2>\n        <div className=\"input-form\">\n          <input\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"  Имя пользователя\"\n            onChange={(e) => updateSearch(e.target.value)}\n            onKeyPress={(event) => {\n              if (event.code.toLowerCase() === \"enter\") {\n                if (search !== \"\") {\n                  history.push(\"/lab10/build/user\");\n                }\n              }\n            }}\n          />\n          <button\n            className=\"button\"\n            onClick={() => {\n              if (search !== \"\") {\n                history.push(\"/lab10/build/user\");\n              }\n            }}\n          >Поиск</button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import User from \"./components/User\";\nimport Home from \"./components/Home\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div>\n        <Switch>\n          <Route exact path=\"/lab10/build/\"><Home/></Route>\n          <Route path=\"/lab10/build/user\"><User/></Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import {IUserState, IUserAction, UserActionTypes} from \"../../types/user\"\nconst initialState: IUserState = {\n  data: null,\n  loading: false,\n  error: null,\n};\n\nexport const userReducer = (\n  state = initialState,\n  action: IUserAction\n): IUserState => {\n  switch (action.type) {\n    case UserActionTypes.FETCH_USER:\n      return { loading: true, error: null, data: null };\n    case UserActionTypes.FETCH_USER_SUCCESS:\n      return { loading: false, error: null, data: {\n        ...state.data,\n        avatar_url: action.payload.avatar_url,\n        login: action.payload.login,\n        followers: action.payload.followers.toString(),\n        following: action.payload.following.toString(),\n        created_at: action.payload.created_at,\n        updated_at: action.payload.updated_at,\n        public_repos: action.payload.public_repos.toString(),\n      }};\n    case UserActionTypes.FETCH_USER_ERROR:\n      return { loading: false, error: action.payload, data: null };\n    default:\n      return state;\n  }\n};\n","import {ISearchState, ISearchAction, SearchActionTypes} from \"../../types/search\"\nconst initialState: ISearchState = {\n  search:\"\"\n};\n\nexport const searchReducer = (\n  state = initialState,\n  action: ISearchAction\n): ISearchState => {\n  switch (action.type) {\n    case SearchActionTypes.SEARCH_CLEAN:\n      return { search: \"\" };\n    case SearchActionTypes.SEARCH_UPDATE:\n      return { search: action.payload };\n    default:\n      return state;\n  }\n};","import {combineReducers} from \"redux\"\nimport {userReducer} from \"./userReducer\"\nimport {searchReducer} from \"./searchReducer\"\n\nexport const  rootReducer = combineReducers({\n    user: userReducer,\n    search: searchReducer,\n})\n\nexport type RootState = ReturnType<typeof rootReducer>","import {applyMiddleware, createStore} from \"redux\";\nimport thunk from \"redux-thunk\"\nimport { rootReducer } from \"./reducers\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n\n\nexport const store =createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}