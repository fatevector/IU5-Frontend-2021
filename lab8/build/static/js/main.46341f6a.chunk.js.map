{"version":3,"sources":["Todo/AddTodo.js","Todo/TodoItem.js","Todo/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["AddTodo","createTodo","React","useState","note","setNote","onSubmit","event","preventDefault","trim","value","onChange","target","type","TodoItem","todo","index","removeTodo","classes","completed","push","console","log","title","todoInput","setTodoInput","className","id","checked","join","onClick","TodoList","props","todos","map","App","setTodos","filter","Date","now","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAmBeA,MAjBf,YAA+B,IAAbC,EAAY,EAAZA,WAAY,EACJC,IAAMC,SAAS,IADX,mBACnBC,EADmB,KACbC,EADa,KAS1B,OACI,uBAAMC,SARV,SAAkBC,GACdA,EAAMC,iBACFJ,EAAKK,SACLR,EAAWG,GACXC,EAAQ,MAIZ,UACI,uBAAOK,MAAON,EAAMO,SAAU,SAAAJ,GAAK,OAAEF,EAAQE,EAAMK,OAAOF,UAC1D,wBAAQG,KAAK,SAAb,uGCOGC,MAnBf,YAAyD,IAArCC,EAAoC,EAApCA,KAAaJ,GAAuB,EAA9BK,MAA8B,EAAvBL,UAAUM,EAAa,EAAbA,WACnCC,EAAU,GACZH,EAAKI,WACPD,EAAQE,KAAK,aAEfC,QAAQC,IAAIP,GAL0C,MAMtBb,IAAMC,SAASY,EAAKQ,OANE,mBAM/CC,EAN+C,KAMpCC,EANoC,KAOtD,OACE,qBAAIC,UAAU,OAAd,UACE,iCACE,uBAAOb,KAAK,WAAWF,SAAU,kBAAMA,EAASI,EAAKY,KAAKC,QAASb,EAAKI,YACxE,qCACA,uBAAOQ,GAAG,aAAaD,UAAWR,EAAQW,KAAK,KAAMhB,KAAK,OAAOH,MAAOc,EAAWb,SAAU,SAAAJ,GAAK,OAAEkB,EAAalB,EAAMK,OAAOF,aAEhI,wBAAQgB,UAAU,SAASI,QAAS,kBAAIb,EAAWF,EAAKY,KAAxD,sBCKSI,MAlBf,SAAkBC,GAChB,OACE,6BACGA,EAAMC,MAAMC,KAAI,SAACnB,EAAMC,GACtB,OACE,cAAC,EAAD,CACED,KAAMA,EAENC,MAAOA,EACPL,SAAUqB,EAAMrB,SAChBM,WAAYe,EAAMf,YAHbF,EAAKY,UC0BPQ,MAhCf,WAAgB,IAAD,EACWjC,IAAMC,SAAS,IAD1B,mBACN8B,EADM,KACCG,EADD,KAuBb,OACE,sBAAKV,UAAU,OAAf,UACE,yFACA,cAAC,EAAD,CAAUO,MAAOA,EAAOtB,SApB5B,SAAkBgB,GAChBS,EAASH,EAAMC,KAAI,SAAAnB,GAEjB,OADGY,IAAKZ,EAAKY,KAAIZ,EAAKI,WAAWJ,EAAKI,WAC/BJ,OAiBqCE,WAbhD,SAAoBU,GAClBS,EAASH,EAAMI,QAAO,SAAAtB,GAAI,OAAEY,IAAKZ,EAAKY,UAapC,cAAC,EAAD,CAAS1B,WAXb,SAAoBG,GAClBgC,EAAS,GAAD,mBAAKH,GAAL,CAAY,CAClBN,GAAIW,KAAKC,MACTpB,WAAW,EACXI,MAAOnB,aCZEoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.46341f6a.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction AddTodo({createTodo}){\n    const [note, setNote]=React.useState('');\n    function onSubmit(event){\n        event.preventDefault();\n        if (note.trim()){\n            createTodo(note);\n            setNote('');\n        }\n    }\n    return (\n        <form onSubmit={onSubmit}>\n            <input value={note} onChange={event=>setNote(event.target.value)}/>\n            <button type=\"submit\">Добавить запись</button>\n        </form>\n    )\n}\n\nexport default AddTodo","import React from \"react\";\n\nfunction TodoItem({ todo, index, onChange, removeTodo}) {\n  const classes = [];\n  if (todo.completed) {\n    classes.push(\"completed\");\n  }\n  console.log(todo);\n  const [todoInput, setTodoInput]=React.useState(todo.title);\n  return (\n    <li className=\"item\">\n      <span>\n        <input type=\"checkbox\" onChange={() => onChange(todo.id)} checked={todo.completed} />\n        <span> </span>\n        <input id=\"todo-input\" className={classes.join(\" \")} type=\"text\" value={todoInput} onChange={event=>setTodoInput(event.target.value)}></input>\n      </span>\n      <button className=\"delete\" onClick={()=>removeTodo(todo.id)}>&times;</button>\n    </li>\n  );\n}\n\nexport default TodoItem;\n","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nfunction TodoList(props) {\n  return (\n    <ul>\n      {props.todos.map((todo, index) => {\n        return (\n          <TodoItem\n            todo={todo}\n            key={todo.id}\n            index={index}\n            onChange={props.onChange}\n            removeTodo={props.removeTodo}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default TodoList;\n","import React from \"react\";\nimport AddTodo from \"./Todo/AddTodo\";\nimport TodoList from \"./Todo/TodoList\";\n\nfunction App() {\n  const [todos, setTodos]=React.useState([\n    // { id: 1, completed: false, title: \"Купить хлеб\" },\n    // { id: 2, completed: false, title: \"Купить масло\" },\n    // { id: 3, completed: false, title: \"Купить молоко \" }\n  ])\n  function onChange(id){\n    setTodos(todos.map(todo=>{\n      if(id===todo.id) todo.completed=!todo.completed\n      return todo\n    })\n    )\n  }\n  function removeTodo(id){\n    setTodos(todos.filter(todo=>id!==todo.id))\n  }\n  function createTodo(note){\n    setTodos([...todos, {\n      id: Date.now(),\n      completed: false,\n      title: note\n    }])\n  }\n  return (\n    <div className=\"main\">\n      <h1>Список дел</h1>\n      <TodoList todos={todos} onChange={onChange} removeTodo={removeTodo}/>\n      <AddTodo createTodo={createTodo}/>\n    </div>\n  ); \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}