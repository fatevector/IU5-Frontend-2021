{"version":3,"sources":["components/Home.js","components/User.js","App.js","reportWebVitals.js","index.js"],"names":["Home","name","onChange","useState","flag","setFlag","history","useHistory","push","className","type","placeholder","e","onKeyPress","event","code","toLowerCase","value","to","UserCard","data","settingData","src","avatar_url","alt","login","public_repos","followers","following","created_at","updated_at","User","props","useEffect","fetch","then","result","json","res","message","setError","error","App","setData","setName","path","info","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e666046f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nfunction Home({ name, onChange }) {\n  const [flag, setFlag] = useState(false);\n  let history = useHistory();\n  if (flag) history.push(\"/user\");\n\n  return (\n    <div className=\"content\">\n      <div className=\"search-form\">\n        <h2>Поиск пользователя</h2>\n        <div className=\"input-form\">\n          <input\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"  Имя пользователя\"\n            onChange={(e) => onChange(e)}\n            onKeyPress={(event) => {\n              if (event.code.toLowerCase() === \"enter\") {\n                setFlag(true);\n              }\n            }}\n            value={name}\n          />\n          <Link to=\"/user\">\n            <button className=\"button\">Поиск</button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst UserCard = ({ data, settingData }) => {\n  return (\n    <div className=\"usercard\">\n      <img\n        src={data.avatar_url}\n        alt=\"Ошибка загрузки аватара\"\n        className=\"avatar\"\n      />\n      <h1 className=\"login\">{data.login}</h1>\n      <h3>{data.public_repos} repositories</h3>\n      <h3>{data.followers} followers</h3>\n      <h3>{data.following} following</h3>\n      <div>Created at {data.created_at}</div>\n      <div>Updated at {data.updated_at}</div>\n    </div>\n  );\n};\n\nexport default function User(props) {\n  useEffect(() => {\n    fetch(\"https://api.github.com/users/\" + props.name)\n      .then((result) => result.json())\n      .then((res) => {\n        if (res.message) {\n          props.setError(true);\n        } else {\n          props.setError(false);\n          props.settingData(res);\n        }\n      });\n  }, []);\n  if (!props.error)\n    return (\n      <div className=\"content\">\n        {props.data.avatar_url !== \"undefined\" ? (\n          <UserCard data={props.data} settingData={props.settingData} />\n        ) : (\n          <div />\n        )}\n        <Link to=\"/\">\n          <button className=\"button\">Главная</button>\n        </Link>\n      </div>\n    );\n  return (\n    <div className=\"content\">\n      <div className=\"error\">Пользователь не найден</div>\n      <Link to=\"/\">\n        <button className=\"button\">Главная</button>\n      </Link>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./components/Home\";\n\nimport User from \"./components/User\";\nfunction App() {\n  const [data, setData] = useState({\n    avatar_url: \"\",\n    login: \"\",\n    followers: \"\",\n    following: \"\",\n    created_at: \"\",\n    updated_at: \"\",\n    public_repos: \"\"\n  });\n  const [error, setError] = useState(false);\n  const [name, setName] = useState(\"\");\n  function onChange(e) {\n    setName(e.target.value);\n  }\n  function settingData(info) {\n    setData({\n      avatar_url: info.avatar_url,\n      login: info.login,\n      followers: info.followers,\n      following: info.following,\n      created_at: info.created_at,\n      updated_at: info.updated_at,\n      public_repos: info.public_repos\n    });\n  }\n  // function MakeRequest(text) {\n  //   console.log(\"Creating a request: \" + text);\n  //   fetch('https://api.github.com/users/' + text)\n  //   .then((result) => result.json())\n  //   .then((data) => {\n  //     if (data.message) {\n  //       setError(true);\n  //     } else {\n  //       setError(false);\n  //       setData(data);\n  //     }\n  //     console.log(data);\n  //   })\n  //   .catch(() => {\n  //     setError(true);\n  //   });\n  // }\n  // let git = \"fatevector\";\n  // useEffect(() => {\n  //   fetch(`https://api.github.com/users/${git}`)\n  //     .then((result) => result.json())\n  //     .then((res) => {\n  //       console.log(res);\n  //     });\n  // });\n  // const [value, setValue]=useState('initial');\n  // const renderCount=useRef(1);\n  // useEffect(()=>{\n  //   renderCount.current++;\n  // })\n  return (\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    /* <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        <h1>Количество рендеров: {renderCount.current}</h1>\n        <input type=\"text\" onChange={e=>setValue(e.target.value)} value={value}/>     \n      </header>\n    </div> */\n    <Router>\n      <Switch>\n        <Route path=\"/user\">\n          <User\n            name={name}\n            data={data}\n            setData={setData}\n            error={error}\n            setError={setError}\n            settingData={settingData}\n          />\n        </Route>\n        <Route path=\"/\">\n          <Home name={name} onChange={onChange} />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}